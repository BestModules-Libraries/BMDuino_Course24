/*
整體程式原理與執行邏輯說明
目標功能：
這個程式的功能是讓 6 顆接在 Pin 8~13 的 LED,
 依序輪流亮起，
 每秒換一顆，像
 是跑馬燈效果，
 並且透過序列監控器輸出目前哪一顆 LED 是亮的，
 哪些是關的。

程式運作流程：
 1. 初始化階段（setup）
  使用 Serial.begin(9600) 啟動串列監控（用於除錯或觀察執行過程）。
  將 Pin 8~13 全部設定為「輸出模式」（pinMode(i, OUTPUT)）。
  所有 LED 一開始都關閉（digitalWrite(i, LOW)）。

2. 執行主邏輯（loop）
主程式進入 loop()，無限重複以下行為：
外層迴圈（for i = 8 to 13）： ==>表示目前要「點亮哪一顆 LED」。
  內層迴圈（for j = 8 to 13）：
    對每一顆 LED 逐一處理。
      如果 j == i，表示這是目前該亮的 LED → 設為 HIGH。
      其他則全設為 LOW（確保只有一顆 LED 會亮）。

    每輪點亮後，delay(1000) 延遲 1 秒，讓使用者可看到 LED 明顯的切換節奏。

關鍵邏輯理解
名稱	說明
pinMode()	設定腳位為輸入或輸出模式。此處是「輸出」。
digitalWrite()	設定腳位輸出電壓：HIGH 為高電位（LED 亮），LOW 為低電位（LED 滅）。
Serial.print()	印出字串到序列監控器，可用於除錯或顯示目前狀態。
delay()	程式暫停指定毫秒時間（1000 毫秒 = 1 秒）。

執行效果（時間線）
時間 (秒)	LED 狀態
0	只有 Pin 8 亮
1	只有 Pin 9 亮
2	只有 Pin 10 亮
3	只有 Pin 11 亮
4	只有 Pin 12 亮
5	只有 Pin 13 亮
6	回到 Pin 8，重複循環

結論
這是一個非常典型的 跑馬燈控制程式，應用了：
多個 GPIO 腳位控制 LED
使用迴圈搭配條件判斷（if (i == j)）讓一顆 LED 依序亮起
串列除錯輸出（Serial.print()）觀察內部邏輯
延遲控制節奏（delay(1000)）
這樣的邏輯在未來可以擴展為：
使用按鈕切換方向
加入亮滅速度控制
用更動態方式設定 LED 腳位陣列（如使用變數長度）

*/