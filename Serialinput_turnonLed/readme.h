/*

整體程式原理與執行邏輯說明
程式原理與運作說明
 硬體設定（前提）
接了 6 顆 LED 到 Arduino 數位腳位 D8 ~ D13。
電腦端使用 序列監控器（Serial Monitor）,
傳送數字給 Arduino（如輸入 3 代表點亮第 3 顆 LED）。

程式邏輯解析
步驟說明
  ① 初始化 setup()	設定序列通訊，設定 LED 腳位為輸出並關閉所有 LED
  ② 持續監控輸入	loop() 中使用 Serial.available() 檢查是否有輸入資料
  ③ 接收與轉換輸入	使用 Serial.readString() 接收整行資料，再用 toInt() 轉換為整數（如 "3" 變 3）
  ④ 控制 LED 開關	用一個迴圈走訪所有 LED，將輸入對應的那一顆設為亮，其餘設為關閉
  ⑤ 持續等待新指令	沒有加延遲，能即時反應使用者新的輸入指令

範例操作結果
使用者輸入1~6結果
  1	D8 亮，其餘 D9~D13 關
  4	D11 亮，其餘燈關
  7	所有燈關（因為超出範圍）
  abc	所有燈關（toInt() 轉換為 0）

注意與建議改善之處
問題/改善建議	說明
  陣列範圍已修正	for (i = 0; i <= 5) 正確避免陣列越界（ledpin[] 長度為 6）
  輸入清理	建議在 readstr.toInt() 前先 readstr.trim() 清除換行與空白字元
  錯誤輸入處理	可加入輸入範圍檢查，例如 if (num >= 1 && num <= 6) 避免非預期輸入影響
  可加入延遲	可加 delay(1000) 讓每次輸入的效果有明顯停頓

延伸應用建議（進階練習）
  支援輸入多個燈號同時亮（如輸入 "135" 代表第 1、3、5 顆燈同時亮）
  輸入 0 或 reset 代表關閉所有燈
  使用按鈕或紅外線遙控模組來代替序列輸入
  加入時間控制，例如每顆燈持續亮 N 秒後自動關閉
*/